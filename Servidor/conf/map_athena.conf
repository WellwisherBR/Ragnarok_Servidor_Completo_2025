//--------------------------------------------------------------
// Arquivo de configuração do Map-Server do rAthena
//--------------------------------------------------------------

// Observação: “Comentários” são todos os textos no lado direito de uma barra dupla “//”
// Qualquer texto comentado não será analisado pelos servidores e serve
// apenas como informação/referência.

//--------------------------------------------------------------
// Informações de configuração
//--------------------------------------------------------------
// Senhas de comunicação entre servidores, definidas em account.txt (ou equiv.)
userid: s1
passwd: p1

// IP do servidor de caracteres
// O servidor de mapas se conecta ao servidor de caracteres usando esse endereço IP.
// OBSERVAÇÃO: isso é útil quando você está operando atrás de um firewall ou está em
// em uma máquina com várias interfaces.
char_ip: 127.0.0.1

// O servidor de mapas escuta na interface com esse endereço IP.
// OBSERVAÇÃO: isso permite que você execute vários servidores em várias interfaces
// enquanto usa as mesmas portas para cada servidor.
//bind_ip: 127.0.0.1

// Porta do servidor de caracteres
char_port: 6121

// IP do servidor de mapas
// O endereço IP que os clientes usarão para se conectar.
// Defina-o como o endereço IP público de seu servidor.
map_ip: 127.0.0.1

// Porta do servidor de mapas
map_port: 5121

// Formato do carimbo de data/hora que será impresso antes de todas as mensagens.
// Pode ter no máximo 20 caracteres.
// Formatos comuns:
// %I:%M:%S %p (hora:minuto:segundo, 12 horas, formato AM/PM)
// %H:%M:%S (hora:minuto:segundo, formato de 24 horas)
// %d/%b/%Y (dia/mês/ano)
// Para obter informações completas sobre o formato, consulte o manual da strftime().
//timestamp_format: [%d/%b %H:%M]

// Se a saída redirecionada contiver sequências de escape (códigos de cores)
stdout_with_ansisequence: no

// Faz com que o servidor registre os tipos de mensagem selecionados em um arquivo na pasta /log/
// 1: mensagens de aviso de registro
// 2: mensagens de erro de registro e de erro de SQL.
// 4: Registro de mensagens de depuração
// Exemplo: “console_msg_log: 7” registra todos os 3 tipos
// As mensagens registradas por essa opção substituem a configuração console_silent
console_msg_log: 0

// Caminho do arquivo para armazenar as mensagens do console acima
console_log_filepath: ./log/map-msg_log.log

// Torna a saída do servidor mais silenciosa ao omitir determinados tipos de mensagens:
// 1: Oculta mensagens de informação
// 2: Ocultar mensagens de status
// 4: Ocultar mensagens de aviso
// 8: Ocultar mensagens de aviso
// 16: Ocultar mensagens de erro e de erro SQL.
// 32: Ocultar mensagens de depuração
// Exemplo: “console_silent: 7” Oculta informações, status e mensagens de aviso (1+2+4)
console_silent: 0

// De onde devem ser lidos todos os dados do banco de dados?
db_path: db

// Habilitar o @guildspy e o @partyspy nos comandos?
// Observe que habilitá-los diminui o desempenho do envio de pacotes.
enable_spy: no

// Ler dados de mapas de GATs e RSWs em arquivos GRF ou em um diretório de dados
// como referenciado por grf-files.txt em vez de no mapcache?
use_grf: no

// Comandos do console
// Permite que os comandos do console sejam ativados/desativados
// Isso impede o uso de >& log.file
console: off

// Tempo de salvamento automático do banco de dados
// Todos os caracteres são salvos nesse tempo em segundos (exemplo:
// salvamento automático de 60 segundos com 60 caracteres on-line -> um caractere é salvo a cada 
// segundo)
autosave_time: 300

// Intervalos mínimos de salvamento do banco de dados (em ms)
// Evitar salvar caracteres mais rápido do que essa taxa (evita que o servidor de caracteres 
// que a carga de salvamento do servidor de caracteres fique muito alta à medida que a contagem de caracteres aumenta)
minsave_time: 100

// Além do autosave_time, os jogadores também serão salvos quando envolvidos
// no seguinte (adicione conforme necessário):
// 1: após cada negociação bem-sucedida
// 2: depois de abrir a venda/cada transação de venda
// 4: após fechar o armazenamento/armazenamento da guilda.
// 8: depois de chocar/retornar ao ovo um animal de estimação.
// 16: Após enviar com sucesso um e-mail com anexo
// 32: Após enviar com sucesso um item para leilão
// 64: Após obter/excluir/concluir com êxito uma missão
// 128: Após cada transação bancária (depósito/retirada)
// 256: Após cada recompensa de presença
// 4095: Sempre
// OBSERVAÇÃO: essas configurações diminuem a chance de duplicatas/itens perdidos quando há uma
// quando há uma falha no servidor, às custas do aumento do atraso do servidor de mapa/char. Se o seu 
// servidor raramente trava, mas apresenta defasagem entre servidores, talvez você queira definir
// isso.
save_settings: 4095

// Arquivo de mensagem do dia, quando um personagem faz logon, essa mensagem é exibida.
motd_txt: conf/motd.txt

// Quando @help ou @h é digitado quando você é um gm, ele é exibido para ajudar os novos gms a entender os comandos gm.
charhelp_txt: conf/charhelp.txt

// Carregar configuração de canal
channel_conf: conf/channels.conf

// Mapas:
import: conf/maps_athena.conf

import: conf/import/map_conf.txt
