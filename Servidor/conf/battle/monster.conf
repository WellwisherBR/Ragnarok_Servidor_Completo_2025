//--------------------------------------------------------------
// Arquivo de configuração de batalha de Rathena
// Originalmente traduzido por Peter Kieser <pfak@telus.net>
// feito para o inglês mais claro por Ancyker
// ----------------------------------------------------------------
// Nota 1: o valor é um interruptor de configuração (ligado/desligado, sim/não ou 1/0)
// Nota 2: O valor está em porcentagens (100 significa 100%)
// Nota 3: O valor é um campo bit.Se nenhuma descrição for dada,
// Assuma os tipos de unidades (1: PC, 2: MOB, 4: Pet, 8: Homun, 16: Mercenary, 128: NPC, 512: Elementar)
//--------------------------------------------------------------

// A taxa de HP de MVPs.(Nota 2)
mvp_hp_rate: 100

// A taxa de HP de monstros normais (que são monstros que não são MVPs) (nota 2)
monster_hp_rate: 100

// define várias configurações relacionadas à IA da MOB.(Nota 3)
// 0x0001: Quando ativado, as mobs atualizam sua célula de destino que cada células X movidas.
// (normalmente eles nunca atualizam sua célula -alvo até que sejam uma célula
// antes do final de seu caminho.x = monster_chase_refresh, veja abaixo)
// 0x0002: faz com que a máfia use sua habilidade de "ataque rude" (geralmente se afastando) se eles
// são atacados e eles não podem atacar, independentemente de como estavam
// atacado (por exemplo: Grimtooth), caso contrário, seu "ataque rude" é ativado apenas
// Se eles não conseguirem atingir o alvo (por exemplo: risadas)
// 0x0004: se não estiver definido, mobs que podem alterar o alvo apenas quando atacados dentro de um
// distância do [intervalo de ataque+1], caso contrário, as mobs podem alterar o alvo e perseguir 
// atacantes à distância.Essa bandeira também substitui a meta de 'provocação'.
// 0x0008: Quando definido, as mobs se dispersam assim que perdem o alvo.Use este modo
// para tornar muito mais difícil o MOB-Train, escondendo-os e colecionando-os em um
// Spot único (ou seja: treinamento Grimtooth)
// 0x0010: Se definido, as habilidades da máfia definidas para amigos também se acionarão.
// 0x0020: Quando definido, o monstro AI é executado para todos os monstros em mapas que 
// tem jogadores neles, em vez de apenas para multidões que estão nas proximidades
// de jogadores.
// 0x0040: Quando definido, quando o alvo da multidão muda o mapa ou está fora de vista, a multidão
// caminhará em direção a NPC-Warps e/ou sacerdotes deformar à vista de visão.
// ele só caminhará para deformação que pode usar e apenas para deformar que o traz de volta
// Ao ver o alvo (use com mob_warp abaixo).
// 0x0080: se não for definido, as multidões no estado de ataque só alterarão as metas quando atacadas
// por ataques normais.Defina isso se você quiser que os mobs também mudem de alvo quando
// atingido por habilidades.
// 0x0100: Quando definido, uma multidão escolherá uma habilidade aleatória na lista e começará de
// que, em vez de verificar as habilidades em ordens (quando não definidas, se uma multidão também tem
// Muitas habilidades, as próximas ao fim raramente serão selecionadas)
// 0x0200: Quando definido, o atraso de reutilização de habilidades de uma multidão não será aplicado a todas as entradas de
// a mesma habilidade, em vez disso, apenas para essa entrada em particular (por exemplo: a mob tem cura
// em seis linhas no mob_skill_db, apenas a entrada que é realmente usada
// receberá o atraso).Isso dificultará os monstros, especialmente os MVPs.
// 0x0400: Defina isso para fazer com que as mobs tenham um intervalo de 9 para todas as habilidades.Caso contrário, eles 
// obedecerá às regras normais da faixa de habilidades.
// 0x0800: Quando definido, monstros provocados sempre mudarão o alvo para o
// Pessoa provocadora, mesmo que geralmente não mudasse de alvo no ataque.
// 0x1000: quando definido, quando um monstro escolhe uma habilidade, mas não pode usá -lo porque existe
// Nenhum alvo válido no intervalo, ele procurará outra habilidade que possa usar.
// Isso faz, por exemploMaior uso geral "pico da terra" na faixa 8-9, enquanto
// oficialmente, isso só o usaria depois de já ter usado "ataque cego"
// no intervalo 0-7.
// Exemplo: 0x140 -> Persiga os jogadores através de Warps + Use Habilidades em ordem aleatória.
monster_ai: 0

// Com que frequência um monstro deve repensar sua perseguição?
// 0: cada 100ms (min_mobthinktime)
// 1: Cada célula se moveu
// x: Cada células X se moviam ou uma célula antes do final do caminho da perseguição
// 32 (máx): uma célula antes do final do caminho da perseguição (oficial)
// Independentemente dessa configuração, um monstro sempre verificará se há alvos no intervalo de ataques.
// Diminua esse valor se você quiser fazer com que os monstros sejam mais reativos ao perseguir.
// Se você quiser que os monstros atualizem a célula de destino deles enquanto perseguem você também precisa ativar
// monster_ai 0x0001, veja acima.Caso contrário, isso define apenas a quantidade máxima de células
// Os monstros se moverão depois que perderão o alvo (oculte, sem linha de visão, etc.).
monster_chase_refresh: 32

// As mobs devem poder ser deformadas (adicione conforme necessário)?
// 0: desativar.
// 1: Habilite Warping de Mob ao ficar de pé no NPC-WARPS
// 2: Habilite Warping de Mob ao ficar em portais de urdidura do padre
// 4: Desative a deformação quando o mapa de destino for um mapa 'Nobranch'.
// 8: Habilite Warping Mob para ficar na porta dimensional
mob_warp: 0

// define o tempo (no MS) durante o qual os monstros terão sua IA ativa
// Depois de todos os jogadores, deixaram sua vizinhança.
// mesmo depois desse período, eles ainda caminharão aleatoriamente e usarão habilidades ociosas até
// Todos os jogadores que os viram se recuperar ou até serem teleportados, recordados
// ou de outra forma removido do mapa.
mob_active_time: 0
boss_active_time: 0

// Mobs e Pets View-Range Ajuste (coluna Range2 no mob_db) (Nota 2)
view_range_rate: 100

// intervalo de perseguição é a base mínima base que uma multidão dá antes de desistir
// (desde que o alvo esteja fora de seu campo de visão).Este é o range3
// coluna no mob_db.(Nota 2)
chase_range_rate: 100

// Qual nível de olho de abutre e olhos de cobra os monstros deveriam aprender?
// Os monstros oficialmente não têm essas habilidades, então suas habilidades de longo alcance
// tem apenas um intervalo de 9. Se você colocar um número superior a 0, o alcance deles será
// ser aumentado por esse número.
monster_eye_range_bonus: 0

// alcance em que os saqueadores procuram saques (máx. 32)
// Oficial: 12
// Legacy Athena: 10
loot_range: 12

// intervalo em que ajudam as mobs a procurar aliados a ajudar (máximo 32)
// Oficial: 11
// Legacy Athena: 10
assist_range: 11

// permite que os monstros sejam agressivos e ataques primeiro?(Nota 1)
monster_active_enable: yes

// Os nomes mob_db devem substituir os nomes da multidão especificados nos arquivos de spawn?
// 0: Não
// 1: sempre use a coluna de nome mob_db (nome da máfia inglesa)
// 2: sempre use a coluna mob_db jname (nome original da mob kro)
override_mob_names: 0

// Taxa de atraso de danos ao monstro (nota 1)
// A configuração para NO/0 é como se eles sempre sofrem.
monster_damage_delay_rate: 100

// saqueando ações de monstro.
// 0 = monstro consumirá o item.
// 1 = monstro não consumirá o item.
monster_loot_type: 0

// Como o item do piso de pesquisa de monstros para saquear?
// 0: mais próximo (estilo Athena antigo)
// 1: mais antigo do alcance (oficial)
monster_loot_search_type: 1

// Chance de Mob lançar uma habilidade (Nota 2)
// taxas mais altas levam a 100% de uso de habilidades da máfia, sem poucos ataques normais.
// Defina como 0 para desativar as habilidades da máfia.
mob_skill_rate: 100

// Ajuste do atraso da habilidade da máfia (nota 2)
// Depois que uma multidão lançou uma habilidade, há um atraso antes de poder
// re-castá-lo.Observe que as habilidades com um atraso de 0 não podem ser afetadas por isso
// contexto.
mob_skill_delay: 100

// Taxa de monstros em um mapa, 200 teriam o dobro do normal.(Nota 2)
mob_count_rate: 100

// Taxa de reaparecimento de monstros em um mapa.50 tornaria as multidões reaparecer duas vezes mais rápido (tempo de atraso) (nota 2)
// Nota: Isso não afeta multidão com reaparecimento imediato (mais mobs normais)
mob_spawn_delay: 100
plant_spawn_delay: 100
boss_spawn_delay: 100

// O tempo de reaparecimento da mobs deve ter variação aplicada a ele?(Nota 3)
// Em servidores oficiais, monstros gerados pelo comando boss_monster (principalmente MVPs) têm variação, o comportamento do Atena Legado é que a variação é aplicada a todas as mobs.
// 0: Nenhum
// 1: Monstros chefes (oficial)
// 2: monstros normais
// 3: Todos os monstros (legado Athena)
mob_spawn_variance: 1

// Mobs não devem gerar dentro da gama de jogadores de visualização?
// 0 está desativado, caso contrário, é o número de tentativas antes de desistir 
// e gerando a multidão dentro da visão de jogador de qualquer maneira, a menos que o máximo (100) seja usado,
// nesse caso, a multidão não será gerada, e será recozida novamente em
// 5 segundos.
// Nota: Isso não tem efeito sobre mobs que sempre aparecem na mesma célula
// (como ovos de formiga), exceto se você o definir no máximo.
no_spawn_on_player: 0

// As coordenadas de gerar devem ser ignoradas com os arquivos de parada da multidão?(Nota 1)
// Se definido como yes, todos os monstros terão um ponto de reaparecimento aleatório em todo o
// mapear, independentemente do que o arquivo de spawn da multidão diz.
force_random_spawn: no

// A célula central de cada monstro deve ser randomizada?(Nota 1)
// Oficialmente, no início do servidor, a célula central de cada monstro é definida como uma célula aleatória na área de desova.
// Cada vez que o monstro aparece, ele aparece em uma área ao redor de sua célula central, em vez de
// Centro original da definição de Spawn.Isso resulta em uma área de Spawn total muito maior e um
// Experiência diferente de cada servidor inicia.
// defina isso como "no" se você quiser que todos os monstros de uma desova para gerar no centro original do
// Definição de desova, tornando a área total de desova muito menor (comportamento antigo de Eathena).
randomize_center_cell: yes

// Os escravos de convocação herdam as características passivas/agressivas de seu mestre?
// 0: Não, retém o modo original.
// 1: Os escravos são sempre agressivos.
// 2: Os escravos são sempre passivos.
// 3: O mesmo que o estado agressivo/passivo do mestre.
// 4: o modo é substituído pelo modo escravo (oficial)
slaves_inherit_mode: 4

// Os escravos de convocação têm a mesma velocidade de caminhada que seu mestre?
// não se aplica a esferas marinhas convocadas por um alquimista
// Nota: o padrão é 3 para servidores oficiais.
// 0: nunca.
// 1: se o mestre pode andar
// 2: Se o mestre não pode andar (mesmo mobs imóveis têm uma velocidade
// entrada em seu mob_db)
// 3: sempre
slaves_inherit_speed: 3

// Os escravos do MVP devem manter seu alvo quando convocados de volta ao seu mestre?(Nota 1)
mob_slave_keep_target: yes

// Os escravos devem se teletransportar de volta ao seu mestre se eles forem longe demais durante o Chase?(Nota 1)
// Oficialmente, eles podem ser movidos o mais longe possível de seu mestre.
slave_stick_with_master: no

// Os escravos devem sempre estar ativos quando seu mestre está ativo?(Nota 1)
// Oficialmente, pode ser que o mestre esteja ativo, mas os escravos não estão.
slave_active_with_master: no

// irá convocar monstros (alquimistas, ou @summon'ed monsters)
// Chance de desencadear os cartões automáticos do mestre?(Nota 1)
summons_trigger_autospells: yes

// Quando uma multidão é atacada por outro monstro, a multidão retaliará contra o mestre da referida multidão em vez da própria multidão?
// Nota: Mobs convocados são aqueles adquiridos via @summon e convocados por alquimistas
retaliate_to_master: yes

// Se as mobs devem mudar o alvo temporariamente quando uma habilidade desencadeia uma habilidade de contador (nota 1)
// por exemplo: a máfia ataca o jogador B e o jogador A lança uma habilidade C. se definido como yes e o
// mob tem uma habilidade que é desencadeada pela habilidade c, então a será o alvo de
// A habilidade, caso contrário, B será direcionado pela habilidade de reação.
mob_changetarget_byskill: no

// Se a classe do monstro for alterada, ela recuperará totalmente a HP?(Nota 1)
monster_class_change_full_recover: yes

// exibe algumas informações da máfia ao lado de seu nome?(Adicione conforme necessário)
// (não funciona no Guardian ou Emperium)
// 1: Exibir MOB HP (formato HP/Maxhp)
// 2: Exibir Mob HP (porcentagem de formato de vida completo)
// 4: exibir o nível da multidão
show_mob_info: 0

// Mobs da Zeny
zeny_from_mobs: no

// monstros de nível subir (o monstro subirá cada vez que um jogador for morto e eles ficarão mais fortes)
// A taxa de exp é calculada ((nível monstro-original de monstro)*(exp*(mobs_level_up_exp taxa/100))))
// Nota: não se aplica aos guardiões dai.
mobs_level_up: no
mobs_level_up_exp_rate: 1

// opções dinâmicas de mobs
// usa mobs dinâmicos?(Recomendado para servidores de tamanho pequeno)
dynamic_mobs: yes

// remove mobs, mesmo que sejam feridos
mob_remove_damaged: yes

// atraso antes de remover mods de mapas vazios (padrão 5 minutos = 300 segundos)
mob_remove_delay: 300000

// define sobre quem a multidão npc_event é executada quando uma multidão é morta.
// tipo 1: no jogador que matou a multidão (se morta por um não-jogador, recorre ao tipo 0)
// Tipo 0: No jogador que causou o maior dano à multidão.
// Nota: Isso afeta quem ganha o castelo quando o Emperium é quebrado.
mob_npc_event_type: 1

// Tempo em milissegundos para ativar a proteção contra o roubo de matar
// Defina como 0 para desativá -lo.
// Se isso for ativado e um jogador estiver usando @Noks, danos de outros jogadores (KS) não no Grupo
// será reduzido para 0.
ksprotection: 0

// se deve ou não gerar a tumba MVP.
// Ver http://irowiki.org/wiki/MVP#Gravestone
mvp_tomb_enabled: yes

// atraso antes que a tumba MVP seja gerada.
// Padrão: 9 segundos
mvp_tomb_delay: 9000

// se o tamanho de mobs especialmente convocado influencia a experiência, taxas de queda,
// e estatísticas.As taxas serão dobradas para grandes multidões e pela metade para pequenas.
// Isso é chamado apenas no comando 'monstro', @monsterbig e @monstersmall.(Nota 1)
// Padrão: no
mob_size_influence: no

// Como um monstro deve ser preso por uma parede de gelo lançada diretamente nele?
// Em servidores oficiais, os monstros só podem deixar uma parede de gelo a oeste e sul.Se o alvo deles estiver norte ou leste de
// eles eles tentarão continuamente persegui -lo, mas falharão.Isso os leva a um loop durante o qual eles usarão
// Habilidades ociosas e de perseguição.Monstros chefes, por outro lado, se comportará como um monstro preso, não se moverá e usará
// Habilidades ociosas e rudemadas (quando atacadas).
// 0: Monster não ficará preso no Icewall.
// 1: Monster se comportará como um monstro preso.
// 2-255: Número de loops Um monstro passará pelo comportamento descrito acima antes de se libertar do Icewall.
// Nota: Em alguns servidores, os monstros normais podem se libertar após 15-35 segundos, dependendo da velocidade.Em outro
// servidores, eles ficarão presos dentro do Icewall até que expire.Além disso, muitos servidores oficiais (por exemplo, IRO) têm fundição
// O Icewall bloqueou completamente todos os mapas que têm monstros chefes.
// Padrão (menos explorável): MOB - 75, chefe - 0
// Padrão (mais oficial): MOB - 220, chefe - 1
mob_icewall_walk_block: 75
boss_icewall_walk_block: 0

// As barras HP devem ser mostradas para monstros?
// 2012-04-04ArageXere ou o cliente superior necessário.
monster_hp_bars_info: yes

// Um ​​monstro deve reaparecer e um aviso impresso no servidor de mapas quando um monstro não pode se mover por um longo tempo?
// Isso pode ser uma jogabilidade legítima (por exemplo, jogadores que mantêm um MVP preso dentro do Icewall), mas se você quiser evitar qualquer
// Explora e seja notificado sobre eles, você pode definir isso como yes.
monster_stuck_warning: no

// Taxa na qual os monstros usam suas habilidades ociosas quando não há jogadores por perto (nota 2)
// Em servidores oficiais, os monstros usam suas habilidades ociosas se tiverem sido vistas uma vez, mesmo que não haja mais jogadores por perto.
// Em servidores de tamanho pequeno, isso pode fazer com que todos os monstros como ovos e fabre/pupa se metamorçam.
// Para desligá -lo, defina -o para 0.
mob_nopc_idleskill_rate: 100
boss_nopc_idleskill_rate: 100

// taxa na qual os monstros se movem quando não há jogadores por perto (nota 2)
// Em servidores oficiais, os monstros sempre se movem se tiverem sido vistos uma vez, mesmo que não haja mais jogadores por perto.
// Para desligá -lo, defina -o para 0.
mob_nopc_move_rate: 100
boss_nopc_move_rate: 100

// Ao matar um monstro, as conquistas do tipo ag_battle gatilho para todos na mesma parte na área?
// A área é limitada a Area_size Battle Config.
achievement_mob_share: no

// Tempo mínimo absoluto de reaparecimento em milissegundos de um monstro.
// também usado para atrasar a desova dos guardiões quando uma guilda não é carregada.
// Padrão (oficial): 1000
mob_respawn_time: 1000

// define o tempo (no MS), após o qual um monstro desbloqueia seu alvo quando preso.
// Durante esse período, os monstros ainda estarão no modo ocioso e usarão habilidades ociosas no aleatório
// alvos, mas eles continuam perseguindo seu alvo original quando não estão mais presos.
mob_unlock_time: 2000
