//--------------------------------------------------------------
// Arquivo de configuração de batalha rAthena
// Originalmente traduzido por Peter Kieser <pfak@telus.net>
// Feito em inglês mais simples por Ancyker
//--------------------------------------------------------------
// Nota 1: O valor é uma chave de configuração (ligado/desligado, sim/não ou 1/0)
// Nota 2: O valor está em porcentagens (100 significa 100%)
// Nota 3: O nível máximo de classes é armazenado na tabela exp.
// Veja os arquivos db/exp.txt e db/exp2.txt para alterá-los.
//--------------------------------------------------------------

// Taxa na qual a exp. é dada. (Nota 2)
// Padrão: 100, 200 seria o dobro
base_exp_rate: 100

// Taxa na qual a exp job. é dada. (Note 2)
// Padrão: 100, 200 seria o dobro
job_exp_rate: 100

// Ative isso para permitir que um jogador suba de nível mais de uma vez a partir de uma morte. (Nota 1)
multi_level_up: no

// Permitir multi-nível até um certo nível?
// Isso só dispara se multi_level_up estiver habilitado.
// Padrão: 0 (Ilimitado)
multi_level_up_base: 0
multi_level_up_job: 0

// Definir isso pode limitar a experiência máxima que alguém pode obter por morte especificada como
// % da barra de exp atual. (Cada 10 = 1,0%)
// Por exemplo, defina como 500 e não importa quanta exp o mob dê, 
// ele nunca pode dar a você mais da metade da sua barra de exp atual.
max_exp_gain_rate: 0

// Método de cálculo de experiência ganha ao derrotar um monstro:
// 0 = usa dano dado / dano total como taxa de dano
// 1 = usa dano dado / max_hp como taxa de dano
// 2 = 0 + o primeiro atacante conta duas vezes
exp_calc_type: 0

// Aumento de experiência por atacante. Ou seja, cada atacante adicional ao
// monstro faz com que ele dê muito mais experiência
// (por exemplo: 5 pessoas atacam com 25 aqui, +(25*4)% -> +100% exp)
exp_bonus_attacker: 25

// Número máximo de atacantes em que o bônus de exp é limitado
// (por exemplo: se definido em 5, o bônus máximo é 4*bônus por personagem, independentemente dos atacantes)
exp_bonus_max_attacker: 12

// Taxa de bônus de MVP. (Nota 2)
mvp_exp_rate: 100

// Taxa de exp base/trabalho dada por NPCs. (Nota 2)
quest_exp_rate: 100

// A taxa de exp. de trabalho ao usar a habilidade Heal (100 é o mesmo que a quantidade de heal, 200 é o dobro.
// O equilíbrio da taxa de exp. é melhor usado com 5 a 10)
heal_exp: 0

// A taxa de exp. que é ganha pelo processo de ressurreição, uma unidade é 0,01%.
// Cálculos de experiência para o valor de experiência * diferença de nível da pessoa revivida / 100 * ressurreição_exp/10000 que o jogador revivido tem podem ser obtidos.
resurrection_exp: 0

// A taxa de exp. de trabalho ao usar desconto e sobretaxa em um NPC
// (em incrementos de 0,01% - 100 é 1%, 10000 é normal, 20000 é o dobro.)
// A maneira como é calculado é (dinheiro recebido * nível de habilidade) * shop_exp / 10000.
shop_exp: 0

// PVP exp. Os jogadores ganham exp em mapas PvP
// (Nota: NÃO exp de jogadores, mas de nivelamento normal)
pvp_exp: yes

// Quando um jogador morre, como devemos penalizá-lo?
// 0 = Sem penalidade.
// 1 = Perde % do nível atual quando morto.
// 2 = Perde % da experiência total quando morto.
death_penalty_type: 1

// Taxa de penalidade de exp. base (cada 100 é 1% de sua exp)
death_penalty_base: 100

// Job exp. Taxa de penalidade (cada 100 é 1% de sua exp)
death_penalty_job: 100

// Quando um jogador morre (para outro jogador), com quanto zeny devemos penalizá-lo?
// NOTA: É uma porcentagem do zeny dele, então 100 = 1%
zeny_penalty: 0

// Jogadores no nível máximo de base/Job perderão EXP ao morrer?
// 0: Nunca perde (padrão como no oficial).
// 1: Perde EXP base.
// 2: Perde EXP de Job.
death_penalty_maxlv: 0

// Exibirá experiência adquirida ao matar um monstro. (Nota 1)
disp_experience: no

// Exibirá zeny ganho (de mobs, negociações, etc.) (Nota 1)
disp_zeny: no

// Usar o conteúdo de db/statpoint.txt ao fazer uma redefinição de estatísticas e subir de nível? (Nota 1)
// Se não, uma equação será usada para preservar os pontos de estatísticas ganhos/perdidos
// por meios externos (por exemplo: compradores/vendedores de pontos de estatísticas)
use_statpoint_table: yes

// Usar o conteúdo de db/statpoint.yml ao fazer uma redefinição de estatísticas e subir de nível? (Nota 1)
// Se não, uma equação será usada para preservar os pontos de característica ganhos/perdidos
// por meios externos (por exemplo: compradores/vendedores de pontos de característica)
use_traitpoint_table: yes

// Custo de EXP para elenco PR_REDEMPTIO (Nota 2)
exp_cost_redemptio: 1

// Quantos jogadores são necessários para fazer a penalidade de EXP do PR_REDEMPTIO se tornar 0?
// Se por padrão, o 'exp_cost_redemptio' for 1 (1%) e cada jogador revivido, a penalidade é reduzida para 0,2%,
// significa que 'exp_cost_redemptio_limit' é 5.
exp_cost_redemptio_limit: 5
