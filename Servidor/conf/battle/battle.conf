//--------------------------------------------------------------
// Arquivo de configuração de batalha rAthena
// Originalmente traduzido por Peter Kieser <pfak@telus.net>
// Feito em inglês mais simples por Ancyker
//--------------------------------------------------------------
// Nota 1: O valor é uma chave de configuração (ligado/desligado, sim/não ou 1/0)
// Nota 2: O valor está em porcentagens (100 significa 100%)
// Nota 3: O valor é um campo de bits. Se nenhuma descrição for dada,
// assume tipos de unidade (1: Pc, 2: Mob, 4: Pet, 8: Homun, 16: Mercenary, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// Quem deve ter um valor baseatk (faz com que str afete o dano)? (Nota 3)
enable_baseatk: 0x9
enable_baseatk_renewal: 0x29F

// Quem pode ter uma fuga perfeita? (Nota 3)
enable_perfect_flee: 1

// Quem pode ter ataques críticos? (Nota 3)
// (Observe que existem algumas habilidades que sempre causam acerto crítico, independentemente disso)
enable_critical: 17

// Taxa de ajustamento crítica para não jogadores (Nota 2)
mob_critical_rate: 100
critical_rate: 100

// Ataques normais devem dar a você um atraso de caminhada? (Nota 3)
// Se não, os personagens podem se mover assim que começarem um ataque (animação de ataque
// ou animação de caminhada podem ser omitidas no lado do cliente, causando ataques cortados ou
// monstros que se teletransportam para você)
// Caso contrário, o atraso é igual à 'animação de ataque' (amotion)
attack_walk_delay: 15

// Ajuste de atraso de movimento após ser atingido. (Nota 2)
// O atraso de 'não pode andar' após ser atingido é calculado como uma porcentagem da duração da animação de dano.
// NOTA: Afeta apenas o atraso normal de um único ataque, não o atraso adicionado pela opção multihit_delay abaixo.
pc_damage_walk_delay_rate: 20
damage_walk_delay_rate: 100

// Ajuste de atraso de movimento para ataques de múltiplos golpes.
// Quando atingidos por uma habilidade de múltiplos golpes como Lord of Vermillion ou Jupitel Thunder, os personagens serão 
// incapazes de se mover por mais "(número de golpes -1) * multihit_delay" milissegundos.
// 80 é a configuração que parece Aegis (vs Sonic Blows)
// 230 é a configuração que faz o walkdelay durar até o último golpe (vs Jupitel thunder)
multihit_delay: 80

// Taxa de atraso danificada para jogadores (Nota 2)
// (Definir como no/0 será como sempre suportar)
player_damage_delay_rate: 100

// Raça ou elemento devem ser usados ​​para considerar alguém morto-vivo?
// 0 = elemento morto-vivo
// 1 = raça morto-vivo
// 2 = ambos (qualquer um funciona)
undead_detect_type: 0

// O HP se recupera se for atingido por um atributo igual ao seu? (Nota 1)
attribute_recover: no

// Qual é a taxa de acerto mínima e máxima de ataques normais?
min_hitrate: 5
max_hitrate: 100

// Tipo de penalidade que é aplicada a FLEE quando mais de agi_penalty_count monstros estão mirando em um jogador
// 0 = nenhuma penalidade é aplicada
// 1 = agi_penalty_num é reduzido de FLEE como %
// 2 = agi_penalty_num é reduzido de FLEE como uma quantidade exata
agi_penalty_type: 1

// Quando a penalidade agi é habilitada, a quem ela deve ser aplicada? (Nota 3)
// Por padrão, apenas jogadores recebem a penalidade.
agi_penalty_target: 1

// Quantidade de inimigos necessários para mirar no jogador antes que o FLEE comece a ser penalizado
agi_penalty_count: 3

// Quantidade de FLEE penalizada por cada monstro atacante maior que agi_penalty_count
agi_penalty_num: 10

// Tipo de penalidade que é aplicada tanto ao equipamento quanto ao vit DEF quando mais de vit_penalty_count monstros estão mirando no jogador
// 0 = nenhuma penalidade é aplicada
// 1 = vit_penalty_num é reduzido do DEF como %
// 2 = vit_penalty_num é reduzido do DEF como uma quantidade exata
vit_penalty_type: 1

// When vit penalty is enabled, to whom it should apply to? (Note 3)
// By default, only players get the penalty.
vit_penalty_target: 1

// Quantidade de inimigos necessários para mirar no jogador antes que a defesa comece a ser penalizada
vit_penalty_count: 3

// Quantidade de defesa VIT penalizada por cada monstro atacante maior que vit_penalty_count
vit_penalty_num: 5

// Use um método alternativo de cálculo de DEF para ataques físicos.
// Com 0, desabilitado (use redução normal de def% com redução adicional de def2)
// Em 1 ou mais defesa é subtração de (DEF * valor).
// por exemplo: 10 + 50 def se torna 0 + (10*tipo + 50)
weapon_defense_type: 0

// MDEF‚ o mesmo que acima. (MDEF * valor)
magic_defense_type: 0

// Mudar a direção do atacante para encarar o oponente em cada ataque? (Nota 3)
// NOTA: Em servidores oficiais, o knockback de algumas habilidades como Firewall é sempre baseado na
// última direção percorrida. Mesmo ao atacar em uma direção completamente diferente, a
// direção do knockback não mudará, então, por exemplo, se você andar para o norte e então atacar um inimigo para
// o sul, você ainda será empurrado de volta para o sul pelo Firewall. Monstros imóveis
// sempre serão empurrados de volta para o sul, pois sua direção padrão é o norte.
attack_direction_change: 0

// Para aqueles que estão definidos, seu elemento de ataque inato é "não elemental"
// (100% versus todos os elementos de defesa) (Nota 3)
// NOTA: Esta é a configuração que faz com que não jogadores possam atingir o dano total
// contra alvos do tipo Fantasma com ataques normais (por exemplo: vs. Ghostring).
attack_attr_none: 14

// Taxa na qual o equipamento pode quebrar (taxa base antes de ser modificado por qualquer habilidade)
// 1 = 0,01% de chance. Padrão para servidores oficiais: 0
equip_natural_break_rate: 0

// Taxa geral em que seu próprio equipamento pode quebrar. (Nota 2)
// Esta taxa afeta a taxa de quebra de penalidade de habilidades como power-thrust e sua taxa de quebra natural
// (de equip_natural_break_rate). Se a habilidade de dotação de um Sábio falhar e estiver acima de 0, a arma do personagem
// selecionado será quebrada.
equip_self_break_rate: 100

// Taxa geral na qual você pode quebrar o equipamento do alvo. (Nota 2)
// Isso afeta o comportamento de habilidades como terror ácido e colapso
equip_skill_break_rate: 100

// O dano deve ter um atraso antes de ser aplicado? (Nota 1)
// Algumas habilidades podem não ter um atraso por padrão, independentemente desta configuração.
// A configuração oficial é sim, embora isso degrade um pouco o desempenho.
delay_battle_damage: yes

// O tempo de dano deve ser sincronizado entre o cliente e o servidor? (Nota 1)
// Este não é um comportamento oficial, mas deve remover o atraso de posição após ser atingido por um monstro.
// Esta configuração afeta apenas ataques normais de monstros e tem prioridade sobre "delay_battle_damage".
// Muitas habilidades mostram seus danos imediatamente, então definir "delay_battle_damage" como "no" ao mesmo
// tempo pode melhorar a experiência ainda mais, mas não funcionará para todas as habilidades.
// Cansado de Dark Illusion atingir você 5 segundos tarde demais? Então ative isso.
synchronize_damage: no

// As flechas/munições são consumidas quando usadas em um arco/arma de fogo?
// 0 = Não
// 1 = Sim
// 2 = Sim, mesmo para habilidades que não especificam o consumo de flechas quando ditas
// a habilidade é baseada em armas e usada com armas de longo alcance (adivinha automaticamente quais
// as habilidades devem consumir munição quando adquiridas por meio de uma carta ou plágio)
arrow_decrement: 1

// A munição deve ser desequipada ao desequipar uma arma?
// O comportamento oficial é "yes".
ammo_unequip: yes

// Uma arma adequada deve ser equipada ao equipar munição?
// O comportamento oficial é "yes".
ammo_check_weapon: yes

// O bônus do script do item 'Autospell' deve verificar o alcance/obstáculos antes de conjurar?
// O comportamento oficial é "não", definir isso como "sim" fará com que as habilidades usem seu
// alcance definido. Por exemplo, Sonic Blow requer uma distância de 2 células antes que o autocasting seja permitido.
// Esta configuração também afeta o autospellwhenhit.
autospell_check_range: no

// Se tanto o atacante quanto o alvo estiverem no mesmo ladrilho, o alvo deve ser empurrado para a esquerda?
// O comportamento oficial é "sim", definir isso como "não" empurrará o alvo para trás do atacante.
knockback_left: yes

// Os jogadores podem usar Falcons e Wargs ao mesmo tempo? (Nota 1)
// Isso não é permitido em servidores oficiais.
warg_can_falcon: no

// O alvo deve ser capaz de desviar do dano se afastando rapidamente para a borda da tela?
// O comportamento oficial é "no"
snap_dodge: no

// Conceda às habilidades/itens do jogador a habilidade de "quebrar" equipamentos não-jogadores. (Nota 1)
// Isso aplicará efetivamente o efeito de remoção de equipamento ao alvo não-jogador.
// NOTA: WS_MELTDOWN é isento desta verificação quando desabilitado.
// Oficial: no
break_mob_equip: no
